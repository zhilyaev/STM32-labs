#include <stm32f3xx.h>

int pin = 0x0100;
int runb;

void Synhronize(){

	RCC->CR |= 0x00000001;					//HSI on
	while(!(RCC->CR&0x00000002));		//HSI ready
	
	RCC->CFGR = 0x0518000A;					// 0000 0101 0001 1000 0000 0000 0000 1010
	/*
	31   | -- 0: PLL is divided by 2 before MCO
	30-28| -- 000: MCO is divided by 1
	26-24| -- 101: HSI clock selected
	21-18| -- 0110: PLL input clock x 8
	16   | -- 0: HSI/2 selected as PLL input clock
	16-15| -- 00: HSI/2 used as PREDIV1 entry and PREDIV1 forced to div by 2.
	3 - 2| -- 10: PLL used as system clock
	1 - 0| -- 10: PLL selected as system clock
	*/
	
	RCC->CR |= 0x01000000;				//PLL on
	while(!(RCC->CR&0x02000000));	// PLL ready
}	

void Delay(int del)
{
	while(del--);
}




//__irq void TIM2_IRQHandler(void)
//{
//	TIM2->SR &=~ TIM_SR_UIF;
//	if(GPIOE->ODR == 0)
//		GPIOE->ODR = pin;
//	else
//		GPIOE->ODR = 0;
//}
		


int main(){
	int maskE;
	maskE	= 0x00600000;
	Synhronize();
	
	RCC->APB2ENR |=0x00000800;	// TIM1 timer clock enable 
	RCC->AHBENR |= maskE;		// I/O ports F,E clock enable
	GPIOE->MODER= 0xAAAA0000;
	GPIOF->PUPDR= 0x55555555; 
	
	GPIOE ->AFR[1] =  0x00002222;
	
	//TIM1->CCMR1 |= 0x00000068;
	TIM1->CCMR1 = TIM_CCMR1_OC1M_2 | TIM_CCMR1_OC1M_1;
	TIM1->PSC = 31999;
	TIM1->ARR = 1000;
	TIM1->CCR1 = 900;
	TIM1->CCER |= 0x00000005;
	TIM1->BDTR |= TIM_BDTR_MOE;
	TIM1->CNT = 0; 
	TIM1->CR1 &= ~TIM_CR1_CMS;
	TIM1->CR1 |= 0x0081;
	

	while(1){
		//TIM1->CCR1 = 500*x;
		Delay(5000);
		if (!(GPIOF->IDR & 0x0010 ))
		{
			if(TIM1->CCR1 <= 1000)
				TIM1->CCR1 += 1;			
		}

		if (!(GPIOF->IDR & 0x0040 ))
		{
			if(TIM1->CCR1 >= 10)
				TIM1->CCR1 -= 1;
		}		
	}

	return 0;
}
